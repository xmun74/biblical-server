name: CI-CD-server

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy-server:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3

      - name: ⎔ Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: ⎔ Install packages
        run: yarn

      - name: ⎔ Build server
        env:
          COOKIE_SECRET: ${{ secrets.COOKIE_SECRET}}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME}}
          MYSQL_PWD: ${{ secrets.MYSQL_PWD}}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST}}
          PORT: ${{ secrets.PORT}}
          KAKAO_ID: ${{ secrets.KAKAO_ID}}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL}}
          REDIS_HOST: ${{ secrets.REDIS_HOST}}
          REDIS_PORT: ${{ secrets.REDIS_PORT}}
          REDIS_PWD: ${{ secrets.REDIS_PWD}}
        run: |
          yarn build

      - name: ⎔ Package dist Folder
        run: tar -czvf dist.tar.gz dist

      - name: ⎔ Deploy to Amazon ECS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PEM_KEY }}
          source: "dist.tar.gz"
          target: ${{ secrets.SERVER_PATH }}

      - name: ⎔ Execute shell script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PEM_KEY }}
          script: |
            cd ${{ secrets.SERVER_PATH }}
            sudo tar -xzvf dist.tar.gz
            yarn
            pm2 kill
            yarn cross-env NODE_ENV=production pm2 start dist/app.js
